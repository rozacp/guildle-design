/**
 * Main style file, with imports
 */
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
@import "http://fonts.googleapis.com/css?family=Roboto+Condensed:400,700";
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/*  Syntax Quick Reference
  --------------------------
  column($ratios: 1, $offset: 0, $cycle: 0, $uncycle: 0, $gutter: $jeet-gutter)
  span($ratio: 1, $offset: 0)
  shift($ratios: 0, $col_or_span: column, $gutter: $jeet-gutter)
  unshift()
  edit()
  center($max_width: 1410px, $pad: 0)
  stack($pad: 0, $align: false)
  unstack()
  align($direction: both)
  cf()
*/
/**
 * Grid settings.
 * All values are defaults and can therefore be easily overidden.
 */
/**
 * List functions courtesy of the wonderful folks at Team Sass.
 * Check out their awesome grid: Singularity.
 */
/**
 * Get  percentage from a given ratio.
 * @param {number} [$ratio=1] - The column ratio of the element.
 * @returns {number} - The percentage value.
 */
/**
 * Work out the column widths based on the ratio and gutter sizes.
 * @param {number} [$ratios=1] - The column ratio of the element.
 * @param {number} [$gutter=$jeet-gutter] - The gutter for the column.
 * @returns {list} $width $gutter - A list containing the with and gutter for the element.
 */
/**
 * Get the set layout direction for the project.
 * @returns {string} $direction - The layout direction.
 */
/**
 * Replace a specified list value with a new value (uses built in set-nth() if available)
 * @param {list} $list - The list of values you want to alter.
 * @param {number} $index - The index of the list item you want to replace.
 * @param {*} $value - The value you want to replace $index with.
 * @returns {list} $list - The list with the value replaced or removed.
 * @warn if an invalid index is supplied.
 */
/**
 * Reverse a list (progressively enhanced for Sass 3.3)
 * @param {list} $list - The list of values you want to reverse.
 * @returns {list} $result - The reversed list.
 */
/**
 * Get the opposite direction to a given value.
 * @param {string} $dir - The direction you want the opposite of.
 * @returns {string} - The opposite direction to $dir.
 * @warn if an incorrect string is provided.
 */
/**
 * Style an element as a column with a gutter.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).
 * @param {number} [$cycle=0] - Easily create an nth column grid where $cycle equals the number of columns.
 * @param {number} [$uncycle=0] - Undo a previous cycle value to allow for a new one.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * An alias for the column mixin.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * Get the width of a column and nothing else.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Get the gutter size of a column and nothing else.
 * @param {number} [ratios=1] - A width relative to its container as a fraction.
 * @param {number} [gutter=jeet.gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * An alias for the column-width function.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * An alias for the column-gutter function.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * Style an element as a column without any gutters for a seamless row.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).
 * @param {number} [cycle=0] - Easily create an nth column grid where cycle equals the number of columns.
 * @param {number} [uncycle=0] - Undo a previous cycle value to allow for a new one.
 */
/**
 * Reorder columns without altering the HTML.
 * @param {number} [$ratios=0] - Specify how far along you want the element to move.
 * @param {string} [$col-or-span=column] - Specify whether the element has a gutter or not.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Reset an element that has had shift() applied to it.
 */
/**
 * View the grid and its layers for easy debugging.
 * @param {string} [$color=black] - The background tint applied.
 * @param {boolean} [$important=false] - Whether to apply the style as !important.
 */
/**
 *  Alias for edit().
 */
/**
 * Horizontally center an element.
 * @param {number} [$max-width=1410px] - The max width the element can be.
 * @param {number} [$pad=0] - Specify the element's left and right padding.
 */
/**
 * Uncenter an element.
 */
/**
 * Stack an element so that nothing is either side of it.
 * @param {number} [$pad=0] - Specify the element's left and right padding.
 * @param {boolean/string} [$align=false] - Specify the text align for the element.
 */
/**
 * Unstack an element.
 */
/**
 * Center an element on either or both axes.
 * @requires A parent container with relative positioning.
 * @param {string} [$direction=both] - Specify which axes to center the element on.
 */
/**
 * Apply a clearfix to an element.
 */
/**
 * Variables
 */
/**
 * Basic settings
 */
html {
  overflow-y: scroll;
  overflow-x: hidden;
}

html,
body {
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
}

body {
  background-color: #f1f1f1;
  color: #444;
  min-height: 100%;
}

html,
body,
button {
  -moz-osx-font-smoothing: antialiased;
  -webkit-font-smoothing: antialiased;
  font-smoothing: antialiased;
}

textarea {
  height: auto;
  min-height: 50px;
  resize: vertical;
}

img, video, audio, embed, object, input, iframe {
  max-width: 100%;
}

audio, canvas, iframe, img, svg, video {
  vertical-align: middle;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

::-moz-selection {
  background: rgba(42, 165, 165, 0.4);
  color: #000;
  text-shadow: none;
}

::selection {
  background: rgba(42, 165, 165, 0.4);
  color: #000;
  text-shadow: none;
}

input.placeholder,
textarea.placeholder {
  color: green;
}

::-webkit-input-placeholder {
  color: green;
}

:-moz-placeholder {
  color: green;
  opacity: 1;
}

::-moz-placeholder {
  color: green;
  opacity: 1;
}

:-ms-input-placeholder {
  color: green;
}

/**
 * Typography
 */
html {
  font-size: 1em;
}

body {
  font-family: 'Roboto Condensed', sans-serif;
  font-weight: 400;
  line-height: 1.45em;
}

p {
  margin-bottom: 1.3em;
}

h1, h2, h3, h4 {
  margin: 1.414em 0 0.5em;
  font-weight: 700;
  line-height: 1.2;
}

h1 {
  margin-top: 0;
  font-size: 2.441em;
}

h2 {
  font-size: 1.953em;
}

h3 {
  font-size: 1.563em;
}

h4 {
  font-size: 1.25em;
}

small, .small {
  font-size: 0.8em;
}

/**
* Link
**/
main a {
  text-decoration: none;
  color: brown;
  border-bottom: 1px solid #aaa;
}
main a:hover {
  color: #5ad5d5;
  border-color: brown;
}

/**
*
* Buttons
*
**/
.button--primary, .button--secondary, .button--tertiary {
  font-weight: 700;
  padding: 10px 25px;
  display: inline-block;
  min-height: 1.45em;
  text-align: center;
  text-decoration: none;
  cursor: pointer;
  outline: 0;
  transition: none;
  background: brown;
  color: #444;
  border: 1px solid #7c2020;
  color: #fff;
}
.button--primary:hover, .button--secondary:hover, .button--tertiary:hover {
  background: #7c2020;
  color: #f1f1f1;
  border-color: brown;
}

.button--secondary {
  display: inline-block;
  min-height: 1.45em;
  text-align: center;
  text-decoration: none;
  cursor: pointer;
  outline: 0;
  transition: none;
  background: green;
  color: #444;
  border: 1px solid #004d00;
  color: #fff;
}
.button--secondary:hover {
  background: #004d00;
  color: #f1f1f1;
  border-color: green;
}

.button--tertiary {
  display: inline-block;
  min-height: 1.45em;
  text-align: center;
  text-decoration: none;
  cursor: pointer;
  outline: 0;
  transition: none;
  background: lightblue;
  color: #444;
  border: 1px solid #86c5da;
}
.button--tertiary:hover {
  background: #86c5da;
  color: #f1f1f1;
  border-color: lightblue;
}

.button--small {
  padding: 3px 10px;
  display: inline-block;
  min-height: 1.45em;
  text-align: center;
  text-decoration: none;
  cursor: pointer;
  outline: 0;
  transition: none;
  background: orange;
  color: #444;
  border: 1px solid #cc8400;
}
.button--small:hover {
  background: #cc8400;
  color: #f1f1f1;
  border-color: orange;
}

.button--intro {
  padding: 15px 30px;
  font-weight: 700;
  width: 170px;
  display: inline-block;
  min-height: 1.45em;
  text-align: center;
  text-decoration: none;
  cursor: pointer;
  outline: 0;
  transition: none;
  background: orange;
  color: #444;
  border: 1px solid #cc8400;
}
.button--intro:hover {
  background: #cc8400;
  color: #f1f1f1;
  border-color: orange;
}

header {
  background-image: url(../img/nelf.png);
  background-repeat: no-repeat;
  background-size: cover;
  height: 500px;
  text-align: center;
}

.top {
  *zoom: 1;
  width: auto;
  max-width: 1200px;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding-left: 0;
  padding-right: 0;
  padding-top: 50px;
  color: #fff;
  position: relative;
}
.top:before, .top:after {
  content: '';
  display: table;
}
.top:after {
  clear: both;
}
.top p {
  font-size: 1.2em;
  text-shadow: 2px 2px rgba(0, 0, 0, 0.8);
}
.top .search, .top .get-started {
  margin-top: 80px;
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 50%;
  margin-left: 0%;
  margin-right: 0%;
  padding: 20px;
}
.top .search:before, .top .search:after, .top .get-started:before, .top .get-started:after {
  content: '';
  display: table;
}
.top .search:after, .top .get-started:after {
  clear: both;
}
.top .search {
  text-align: right;
}
.top .get-started {
  text-align: left;
}
.top .slogan {
  margin-top: 60px;
  color: #fff;
  text-shadow: 2px 2px rgba(0, 0, 0, 0.8);
}

.user {
  text-align: right;
}
.user img {
  border: 1px solid #444;
  width: 80px;
}

nav {
  *zoom: 1;
  width: auto;
  max-width: 1200px;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding-left: 0;
  padding-right: 0;
  margin-top: 3px;
  border-bottom: 1px solid #ccc;
}
nav:before, nav:after {
  content: '';
  display: table;
}
nav:after {
  clear: both;
}
nav ul {
  *zoom: 1;
  margin: 0 auto;
  padding: 0;
  max-width: 800px;
}
nav ul:before, nav ul:after {
  content: '';
  display: table;
}
nav ul:after {
  clear: both;
}
nav ul li {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 20%;
  margin-left: 0%;
  margin-right: 0%;
  list-style: none;
}
nav ul li:before, nav ul li:after {
  content: '';
  display: table;
}
nav ul li:after {
  clear: both;
}
nav ul li a {
  text-align: center;
  display: block;
  line-height: 40px;
  height: 40px;
  text-decoration: none;
  text-transform: uppercase;
  border-bottom: 3px solid transparent;
  color: brown;
  font-weight: 700;
}
nav ul li a:hover {
  border-bottom: 3px solid #444;
}
nav ul li a.active {
  color: #5ad5d5;
  border-bottom: 3px solid #444;
}

main {
  *zoom: 1;
  width: auto;
  max-width: 1200px;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding-left: 0;
  padding-right: 0;
  margin-top: 40px;
  margin-bottom: 20px;
}
main:before, main:after {
  content: '';
  display: table;
}
main:after {
  clear: both;
}
main article {
  background: #fff;
  padding: 20px;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 74.5%;
  margin-left: 0%;
  margin-right: 2%;
}
main article:before, main article:after {
  content: '';
  display: table;
}
main article:after {
  clear: both;
}
main article:last-child {
  margin-right: 0%;
}
main aside {
  background: #fff;
  padding: 20px;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 23.5%;
  margin-left: 0%;
  margin-right: 2%;
}
main aside:before, main aside:after {
  content: '';
  display: table;
}
main aside:after {
  clear: both;
}
main aside:last-child {
  margin-right: 0%;
}
main aside .button--primary, main aside .button--secondary, main aside .button--tertiary {
  margin-bottom: 15px;
}

footer {
  background: #222;
  height: 250px;
  color: #fff;
  text-align: center;
  padding: 20px;
}

input {
  background: #fff;
  border: 1px solid #ccc;
  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
  width: 100%;
  padding: 10px;
}
input:hover {
  border: 1px solid brown;
}

/*# sourceMappingURL=style.css.map */
